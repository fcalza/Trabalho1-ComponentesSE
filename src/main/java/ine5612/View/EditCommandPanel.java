/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ine5612.View;

import ine5612.Controllers.CommandController;
import ine5612.Controllers.FuncionaryController;
import ine5612.Model.UserModel;
import javax.accessibility.AccessibleRole;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Calza
 */
public class EditCommandPanel extends javax.swing.JPanel {

    double sum = 0;
    CommandController commandController;
    UserModel userModel;

    /**
     * Creates new form ManagerPanel
     */
    public EditCommandPanel(CommandController commandController) {
        this.commandController = commandController;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        produtosTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        comandaTable = new javax.swing.JTable();
        addToCommandButton = new javax.swing.JButton();
        removeFromCommandButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        priceComandaLabel = new javax.swing.JLabel();
        receivePaymentButton = new javax.swing.JButton();

        produtosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Água 500ml",  new Double(3.0)},
                {"Batata frita",  new Double(15.0)},
                {"Caipirinha",  new Double(8.0)},
                {"Cerveja",  new Double(9.0)},
                {"Prato feito",  new Double(12.0)},
                {"Refrigerante 600ml",  new Double(5.0)}
            },
            new String [] {
                "Produto", "Valor (R$)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(produtosTable);
        if (produtosTable.getColumnModel().getColumnCount() > 0) {
            produtosTable.getColumnModel().getColumn(0).setResizable(false);
            produtosTable.getColumnModel().getColumn(1).setResizable(false);
        }

        comandaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Valor (R$)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(comandaTable);
        if (comandaTable.getColumnModel().getColumnCount() > 0) {
            comandaTable.getColumnModel().getColumn(0).setResizable(false);
            comandaTable.getColumnModel().getColumn(1).setResizable(false);
        }

        addToCommandButton.setText("Adicionar à comanda");
        addToCommandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCommandButtonActionPerformed(evt);
            }
        });

        removeFromCommandButton.setText("Remover da comanda");
        removeFromCommandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromCommandButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Valor total da comanda: ");

        receivePaymentButton.setText("Receber pagamento");
        receivePaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivePaymentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addToCommandButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(priceComandaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(receivePaymentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(removeFromCommandButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(addToCommandButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(removeFromCommandButton)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(priceComandaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(receivePaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    //ADICIONAR UM PRODUTO NA COMANDA
    private void addToCommandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCommandButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) comandaTable.getModel();

        int numCols = produtosTable.getSelectedColumnCount();
        int numRows = produtosTable.getSelectedRowCount();
        int[] rowsSelected = produtosTable.getSelectedRows();
        int[] colsSelected = produtosTable.getSelectedColumns();

        for (int i = 0; i < numRows; i++) {
            model.addRow(new Object[]{
                produtosTable.getValueAt(rowsSelected[i], 0),
                produtosTable.getValueAt(rowsSelected[i], 1)});
            sum = commandController.getSum();
            sum += Double.parseDouble(produtosTable.getValueAt(rowsSelected[i], 1).toString());

        }
        priceComandaLabel.setText(Double.toString(sum));//deve atualiar o preço total da comanda no textfild priceComanda
        commandController.setSum(sum);
    }//GEN-LAST:event_addToCommandButtonActionPerformed

    //"EDITAR" - REMOVER LINHAS DA COMANDA
    private void removeFromCommandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromCommandButtonActionPerformed
        // TODO add your handling code here:
        //if(userModel.isManager()){
        double updateValueAfterRemove = commandController.getSum();
        double difference = 0;
        DefaultTableModel model = (DefaultTableModel) comandaTable.getModel();
        if (comandaTable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Comanda vazia");
        } else if (comandaTable.getSelectedRow() >= 0) {
            model.removeRow(comandaTable.getSelectedRow());
            for (int i = 0; i < comandaTable.getRowCount(); i++) {
                difference = Double.parseDouble(comandaTable.getValueAt(i, 1).toString());
            }
            updateValueAfterRemove = updateValueAfterRemove - difference; 
            commandController.setSum(updateValueAfterRemove);
            
            priceComandaLabel.setText(Double.toString(commandController.getSum()));//
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um produto para ser removido");
        }

    }//GEN-LAST:event_removeFromCommandButtonActionPerformed

    //RECEBER PARTE DO PAGAMENTO - RECEBER TODO O PAGAMENTO É O FINALIZAR COMANDA
    private void receivePaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivePaymentButtonActionPerformed
        // TODO add your handling code here:

        //if(userModel.isManager()){
        if (comandaTable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Comanda vazia");
        } else {
            sum = commandController.getSum();
            String decrement = JOptionPane.showInputDialog(null, "VALOR TOTAL DA COMANDA"
                    + "\n                R$:  " + sum + "\n\n\n\n"
                    + "INSIRA VALOR A SER PAGO:");
            
            sum = sum - Integer.parseInt(decrement);
            commandController.setSum(sum);
            priceComandaLabel.setText(Double.toString(sum));//

        }

    }//GEN-LAST:event_receivePaymentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCommandButton;
    private javax.swing.JTable comandaTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel priceComandaLabel;
    private javax.swing.JTable produtosTable;
    private javax.swing.JButton receivePaymentButton;
    private javax.swing.JButton removeFromCommandButton;
    // End of variables declaration//GEN-END:variables
}
